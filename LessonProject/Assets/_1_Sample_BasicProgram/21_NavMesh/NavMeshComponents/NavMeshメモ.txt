NavMeshComponents
https://github.com/Unity-Technologies/NavMeshComponents
から
NavMeshComponentsフォルダを自身のプロジェクトのAssetsフォルダ配下にコピーで使えるようになる



Examples →  Scenes説明


1_multiple_agent_sizes
クリックした箇所に移動
赤いAgentは右端のゲートしか通れない（AgentTypeが設定されてないため？）

2_drop_plank

クリックした箇所に移動
スペースを押すと板が落ちてきて渡れる
LocalNavMeshBuilderオブジェクトの同名スクリプトについているサイズ範囲内のものを自動でbakeし直してるっぽい。

3_free_orientation

TiltedPlaneオブジェクトのNavMeshSurfaceコンポーネントでBakeしている。Staticを付ける必要がないためワールド座標ではなくローカル座標でのBakeが可能。オブジェクトを回転させてもNavmeshで移動できる

4_sliding_window_infinite

クリックした箇所に移動
Agentの周りが自動的に移動可能エリアになる
LocalNavMeshBuilderオブジェクトのサイズ範囲内をbakeしなおしてるっぽい。

5_sliding_window_terrain

4とほぼ同じ

6_modify_mesh

地形をリアルタイムで変形

マウスカーソルで合わせたところでクリックすると地形が盛り上がる

右クリックで地形が凹む

7_dungeon

複数のNavmeshをnavmeshlinkを使用して移動可能にしている。

Agentがnavmeshlinkの端に到達するとジャンプする。

7b_dungeon_tile_prefabs

7で使用するprefab群








NavMeshObstacle
既にBake済みのNavmeshに上書きで移動不可エリアを追加できる。
ただし1オブジェクトに1つしか付けれない。
https://docs.unity3d.com/ja/2020.3/Manual/nav-CreateNavMeshObstacle.html

 




OffMeshLink
複数のNavmeshを接続することが出来る。

Unity標準コンポーネント、NavmeshLinkの前世。
スタート地点とエンド地点をserializefieldのTransfromで指定する必要がある。

 




NavMeshLink
複数のNavmeshを接続することが出来る。

githubから追加されたコンポーネント、offmeshlinkの上位互換

スタート地点とエンド地点をPositionZYXで指定する。
一方通行、双方向通行を選択できる。
Bidirectional：両方向移動する場合にチェック、一方通行の場合はチェックを外す

Widthを0.5とか1とか設定しておかないとNavMeshLink上を移動してくれないので注意

中身はoffmeshLinkなのでスクリプトで制御するときも
agent.currentOffMeshLinkData.endPosのような感じで扱う

https://docs.unity3d.com/ja/2020.3/Manual/class-NavMeshLink.html

 
 



 
NavMeshModifierVolume
https://docs.unity3d.com/ja/2020.3/Manual/class-NavMesh-ModifierVolume.html

事前に範囲を指定しておきBake時にその設定で上書きする。

なので、すでにBakeしてある箇所に後から追加するだけでは反応しない。
（あとから追加したらもう一度Bakeしなおす）

meshがあるオブジェクトじゃないと反応しない。なので空のオブジェクトに設定して上書きしようとしても反応しない。

※プレイヤーの周りだけコストを上げる時に使えるかと思ったけど、NavMeshObstacleみたいにリアルタイムで動くものには使えなかった。










移動のあれこれ

CompleteOffMeshLink
offmeshlinkの移動を完了させる。offmeshlink上に居る場合に反対側に移動する。とのことだが反応しなかった。navmeshlinkもoffmeshlinkも反応しなかった。
https://docs.unity3d.com/ja/current/ScriptReference/AI.NavMeshAgent.CompleteOffMeshLink.html 
 
 



Warp
Agentをワープさせる。
メッシュの移動は成功する。
https://docs.unity3d.com/2018.4/Documentation/ScriptReference/AI.NavMeshAgent.Warp.html 
agent.SetDestination(position);
 




エリアマスク
areaMaskの設定が公式referenceに乗ってない・・
これはビットフィールドです。とか設定できます。だけ
NavMesh.GetAreaFromNameの方に説明があった 

_agent.areaMask = 1 << NavMesh.GetAreaFromName("Jump");
 

 



navmeshlinkにagentが乗ると速度が上がってしまう。
この問題はスクリプトで制御する必要がある。

参考：https://tsubakit1.hateblo.jp/entry/2016/12/01/031711

 







agentの足元が動く場合
一度agentの移動を全て停止させる
agent.ResetPath();
agent.isStopped = true;
agent.updatePosition = false;
agent.updateRotation = false;

ただし、
agent.updatePosition = false;
agent.updateRotation = false;
の影響でagent本体が置いてきぼりになる

完了処理で
NavMeshAgent.Warp(本体の位置.position);
を読んであげる必要がある

その後
agent.updatePosition = true;
agent.updateRotation = true;
にもどす